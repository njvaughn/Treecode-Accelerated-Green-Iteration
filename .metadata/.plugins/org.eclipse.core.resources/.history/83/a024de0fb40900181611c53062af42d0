'''
Created on Feb 4, 2018

@author: nathanvaughn
'''
import unittest
import numpy as np

from cell_data_structure import cell

class TestCell(unittest.TestCase):


    def setUp(self):
        ''' 
        Set up a 3x3x3 cell on [0,1]x[0,1]x[0,1].  Define psi = exp(-r)
        '''
#         gridpoints = np.zeros((3,3,3),dtype=object)
        x = y = z = np.zeros(3)
        psi = np.zeros((3,3,3))
        for i in range(2):
            x[i] = i/2.0
            for j in range(2):
                for k in range(2):
                    gridpoints[i,j,k] = 2
#                     gridpoints[i,j,k] = np.array[i/2.0, j/2.0, k/2.0]
                    r = np.sqrt((i*i + j*j + k*k)/4)
                    psi[i,j,k] = np.exp(-r)
        self.Cell = cell(x,y,z,psi)
        


    def tearDown(self):
        pass


    def testPsiEvaluation(self):
        self.assertEqual(self.Cell.psi[0,0,0], np.exp(0), "psi not as expected at (0,0,0)")
        self.assertEqual(self.Cell.psi[2,2,2], np.exp(-np.sqrt(3)), "psi not as expected at (1,1,1)")
        self.assertEqual(self.Cell.psi[1,1,1], np.exp(-np.sqrt(3/4)), "psi not as expected at (0.5,0.5,0.5)")

        


if __name__ == "__main__":
    #import sys;sys.argv = ['', 'Test.testName']
    unittest.main()